DROP TABLE IF EXISTS likes CASCADE;
DROP TABLE IF EXISTS film_genre CASCADE;
DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;

CREATE TABLE IF NOT EXISTS friendship (
    user_id integer,
    friend_id integer,
    status bool DEFAULT false,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    login varchar NOT NULL,
    email varchar NOT NULL,
    birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS likes (
    film_id integer,
    user_id integer,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS films (
    film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar(200) NOT NULL,
    duration integer NOT NULL,
    release_date date NOT NULL,
    mpa_id integer
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id integer,
    genre_id integer,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS genre (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL,
    description varchar NOT NULL
);

ALTER TABLE friendship ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE friendship ADD FOREIGN KEY (friend_id) REFERENCES users (user_id);

ALTER TABLE likes ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE likes ADD FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE films ADD FOREIGN KEY (mpa_id) REFERENCES mpa (mpa_id);

ALTER TABLE film_genre ADD FOREIGN KEY (film_id) REFERENCES films (film_id);

ALTER TABLE film_genre ADD FOREIGN KEY (genre_id) REFERENCES genre (genre_id);
